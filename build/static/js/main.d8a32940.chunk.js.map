{"version":3,"sources":["EditModalCar.tsx","CreateModalCar.tsx","Filters.tsx","Report.tsx","table.tsx","service.ts","App.tsx","index.tsx"],"names":["EditModalCar","isOpened","row","close","service","useState","key","carNumber","buildCar","carCheck","model","mark","mileage","price","costs","forSale","buyDay","cellDay","owner","isCell","profit","newCar","setNewCar","title","visible","onOk","editData2","onCancel","value","onChange","e","target","format","time","Date","parse","toString","console","log","toLocaleString","CreateModalCar","dataCar","length","addData2","className","Filters","setDataCar","start","end","filters","setFilters","type","onClick","filterCell","filterMark","filterModel","filterTime","reset","Report","data","filter","item","reduce","acc","parseFloat","TableCar","columns","dataIndex","render","toLocaleDateString","setOpenedEditModal","isOpenedEditModal","setData","isOpenedModal","setOpenedModal","isOpenReportModal","setOpenReportModal","useEffect","fetchData2","filterData","dataSource","pagination","bordered","Service","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","allData","firebase","this","dispatch","collection","doc","onSnapshot","Object","values","map","car","set","merge","then","catch","error","update","filterType","App","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.d8a32940.chunk.js","sourcesContent":["import * as React from 'react'\r\nimport { DatePicker, Modal } from 'antd/lib'\r\nimport { useState } from 'react'\r\nimport { Service } from './service'\r\n\r\ninterface Props {\r\n  isOpened: boolean\r\n  row: any\r\n  close: (isOpen: string) => void\r\n  service: Service\r\n}\r\n\r\nconst EditModalCar = ({ isOpened, row, close, service }: Props) => {\r\n  const [newCar, setNewCar] = useState({\r\n    key: row.key,\r\n    carNumber: row.carNumber,\r\n    buildCar: row.buildCar,\r\n    carCheck: row.carCheck,\r\n    model: row.model,\r\n    mark: row.mark,\r\n    mileage: row.mileage,\r\n    price: row.price,\r\n    costs: row.costs,\r\n    forSale: row.forSale,\r\n    buyDay: row.buyDay,\r\n    cellDay: row.cellDay,\r\n    owner: row.owner,\r\n    isCell: row.isCell,\r\n    profit: row.profit,\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Редактировать\"\r\n        visible={isOpened}\r\n        onOk={() => {\r\n          service.editData2(newCar)\r\n          close('')\r\n        }}\r\n        onCancel={() => close('')}\r\n      >\r\n        <div>\r\n          <div>\r\n            Номер авто{' '}\r\n            <input\r\n              value={newCar.carNumber}\r\n              onChange={e => {\r\n                setNewCar({\r\n                  ...newCar,\r\n                  carNumber: e.target.value,\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <br />\r\n          Год выпуска{' '}\r\n          <DatePicker\r\n            format=\"DD-MM-YYYY\"\r\n            onChange={e => {\r\n              const time = e !== null ? `${Date.parse(e.toString())}` : ''\r\n              console.log(time)\r\n              setNewCar({\r\n                ...newCar,\r\n                buildCar: e !== null ? `${Date.parse(e.toString())}` : '',\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          <br />\r\n          Тех Осмотр{' '}\r\n          <DatePicker\r\n            format=\"DD-MM-YYYY\"\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                carCheck: e !== null ? `${Date.parse(e.toString())}` : '',\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Модель{' '}\r\n          <input\r\n            value={newCar.model}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                model: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Марка{' '}\r\n          <input\r\n            value={newCar.mark}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                mark: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Пробег{' '}\r\n          <input\r\n            value={newCar.mileage}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                mileage: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Цена покупки{' '}\r\n          <input\r\n            value={newCar.price}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                price: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Расходы{' '}\r\n          <input\r\n            value={newCar.costs}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                costs: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          На продажу{' '}\r\n          <input\r\n            value={newCar.forSale}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                forSale: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Дата покупки\r\n          <DatePicker\r\n            format=\"DD-MM-YYYY\"\r\n            onChange={e => {\r\n              console.log(e !== null ? `${Date.parse(e.toLocaleString())}` : '')\r\n              setNewCar({\r\n                ...newCar,\r\n                buyDay: e !== null ? `${Date.parse(e.toLocaleString())}` : '',\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Дата продажи\r\n          <DatePicker\r\n            format=\"DD-MM-YYYY\"\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                cellDay: e !== null ? `${Date.parse(e.toLocaleString())}` : '',\r\n              })\r\n            }}\r\n          />\r\n          <br />\r\n          Владелец{' '}\r\n          <input\r\n            value={newCar.owner}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                owner: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Продано{' '}\r\n          <input\r\n            value={newCar.isCell}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                isCell: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Прибыль{' '}\r\n          <input\r\n            value={newCar.profit}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                profit: e.target.value,\r\n              })\r\n            }}\r\n          />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditModalCar\r\n","import * as React from 'react'\r\nimport { DatePicker, Modal } from 'antd/lib'\r\nimport { useState } from 'react'\r\nimport { Service } from './service'\r\n\r\ninterface Props {\r\n  isOpened: boolean\r\n  row: any\r\n  close: (isOpen: boolean) => void\r\n  service: Service\r\n}\r\n\r\nconst CreateModalCar = ({ isOpened, row, close, service }: Props) => {\r\n  const [newCar, setNewCar] = useState({\r\n    key: `${service.dataCar.length + 1}`,\r\n    carNumber: '',\r\n    buildCar: '',\r\n    carCheck: '',\r\n    model: '',\r\n    mark: '',\r\n    mileage: '',\r\n    price: '',\r\n    costs: '',\r\n    forSale: '',\r\n    buyDay: '',\r\n    cellDay: '',\r\n    owner: '',\r\n    isCell: '',\r\n    profit: '',\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Добавить\"\r\n        visible={isOpened}\r\n        onOk={() => {\r\n          service.addData2(newCar)\r\n          close(false)\r\n        }}\r\n        onCancel={() => close(false)}\r\n      >\r\n        <div>\r\n          <div className=\"create-item\">\r\n              <span>Номер авто</span>\r\n            <input\r\n              value={newCar.carNumber}\r\n              onChange={e => {\r\n                setNewCar({\r\n                  ...newCar,\r\n                  carNumber: e.target.value,\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <br />\r\n          Год выпуска{' '}\r\n          <DatePicker\r\n            format=\"DD-MM-YYYY\"\r\n            onChange={e => {\r\n              const time = e !== null ? `${Date.parse(e.toString())}` : ''\r\n              console.log(time)\r\n              setNewCar({\r\n                ...newCar,\r\n                buildCar: e !== null ? `${Date.parse(e.toString())}` : '',\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          <br />\r\n          Тех Осмотр{' '}\r\n          <DatePicker\r\n            format=\"DD-MM-YYYY\"\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                carCheck: e !== null ? `${Date.parse(e.toString())}` : '',\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Модель{' '}\r\n          <input\r\n            value={newCar.model}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                model: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Марка{' '}\r\n          <input\r\n            value={newCar.mark}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                mark: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Пробег{' '}\r\n          <input\r\n            value={newCar.mileage}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                mileage: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Цена покупки{' '}\r\n          <input\r\n            value={newCar.price}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                price: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Расходы{' '}\r\n          <input\r\n            value={newCar.costs}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                costs: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          На продажу{' '}\r\n          <input\r\n            value={newCar.forSale}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                forSale: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Дата покупки\r\n          <DatePicker\r\n            format=\"DD-MM-YYYY\"\r\n            onChange={e => {\r\n              console.log(e !== null ? `${Date.parse(e.toLocaleString())}` : '')\r\n              setNewCar({\r\n                ...newCar,\r\n                buyDay: e !== null ? `${Date.parse(e.toLocaleString())}` : '',\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Дата продажи\r\n          <DatePicker\r\n            format=\"DD-MM-YYYY\"\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                cellDay: e !== null ? `${Date.parse(e.toLocaleString())}` : '',\r\n              })\r\n            }}\r\n          />\r\n          <br />\r\n          Владелец{' '}\r\n          <input\r\n            value={newCar.owner}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                owner: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Продано{' '}\r\n          <input\r\n            value={newCar.isCell}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                isCell: e.target.value,\r\n              })\r\n            }}\r\n          />{' '}\r\n          <br />\r\n          Прибыль{' '}\r\n          <input\r\n            value={newCar.profit}\r\n            onChange={e => {\r\n              setNewCar({\r\n                ...newCar,\r\n                profit: e.target.value,\r\n              })\r\n            }}\r\n          />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateModalCar\r\n","import { Button, DatePicker } from 'antd'\r\nimport * as React from 'react'\r\nimport { useState } from 'react'\r\nimport {Data, Service} from './service'\r\n\r\ninterface Props {\r\n  service: Service\r\n  setDataCar: (data: Data) => void\r\n}\r\nconst Filters = ({ service, setDataCar }: Props) => {\r\n  const [filters, setFilters] = useState({\r\n    model: '',\r\n    mark: '',\r\n    time: {\r\n      start: '',\r\n      end: '',\r\n    },\r\n    isCell: '',\r\n  })\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <div className=\"filters-item\">\r\n        <input\r\n          onChange={e =>\r\n            setFilters({\r\n              ...filters,\r\n              isCell: e.target.value,\r\n            })\r\n          }\r\n        />\r\n        <Button type=\"primary\" onClick={() => service.filterCell(filters, setDataCar)}>\r\n          Продано\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"filters-item\">\r\n        <input\r\n          onChange={e =>\r\n            setFilters({\r\n              ...filters,\r\n              mark: e.target.value,\r\n            })\r\n          }\r\n        />\r\n        <Button type=\"primary\" onClick={() => service.filterMark(filters, setDataCar)}>\r\n          Модель\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"filters-item\">\r\n        <input\r\n          onChange={e =>\r\n            setFilters({\r\n              ...filters,\r\n              model: e.target.value,\r\n            })\r\n          }\r\n        />\r\n        <Button type=\"primary\" onClick={() => service.filterModel(filters, setDataCar)}>\r\n          Марка\r\n        </Button>\r\n      </div>\r\n\r\n      <div className=\"filters-item\">\r\n        Начало{' '}\r\n        <DatePicker\r\n          format=\"DD-MM-YYYY\"\r\n          onChange={e => {\r\n            console.log(e !== null ? `${Date.parse(e.toString())}` : '')\r\n            setFilters({\r\n              ...filters,\r\n              time: {\r\n                ...filters.time,\r\n                start: e !== null ? `${Date.parse(e.toLocaleString())}` : '',\r\n              },\r\n            })\r\n          }}\r\n        />\r\n        Конец{' '}\r\n        <DatePicker\r\n          format=\"DD-MM-YYYY\"\r\n          onChange={e =>\r\n            setFilters({\r\n              ...filters,\r\n              time: {\r\n                ...filters.time,\r\n                end: e !== null ? `${Date.parse(e.toLocaleString())}` : '',\r\n              },\r\n            })\r\n          }\r\n        />\r\n        <Button type=\"primary\" onClick={() => service.filterTime(filters, setDataCar)}>\r\n          Дата\r\n        </Button>\r\n      </div>\r\n\r\n      <Button type=\"primary\" onClick={() => service.reset(setDataCar)}>\r\n        Сбросить\r\n      </Button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filters\r\n","import * as React from 'react'\r\nimport { Modal } from 'antd/lib'\r\nimport { useState } from 'react'\r\nimport { Car, Data, Service } from './service'\r\n\r\ninterface Props {\r\n  isOpened: boolean\r\n  close: (isOpen: boolean) => void\r\n  data: Data\r\n}\r\n\r\nconst Report = ({ isOpened, close, data }: Props) => {\r\n  return (\r\n    <Modal\r\n      title=\"Отчет\"\r\n      visible={isOpened}\r\n      onOk={() => {\r\n        close(false)\r\n      }}\r\n      onCancel={() => close(false)}\r\n    >\r\n      <p>Куплено авто: {data.length}</p>\r\n      <p>Продано авто: {data.filter(item => item.isCell === 'Нет').length}</p>\r\n      <p>\r\n        Закупка:{' '}\r\n        {data.reduce((acc, item) => {\r\n          if (item.price !== '') {\r\n            acc = acc + parseFloat(item.price)\r\n          }\r\n          return acc\r\n        }, 0)}\r\n      </p>\r\n      <p>\r\n        Расходы:{' '}\r\n        {data.reduce((acc, item) => {\r\n          if (item.costs !== '') {\r\n            acc = acc + parseFloat(item.costs)\r\n          }\r\n          return acc\r\n        }, 0)}\r\n      </p>\r\n      <p>\r\n        Продано{' '}\r\n        {data.reduce((acc, item) => {\r\n          if (item.forSale !== '') {\r\n            acc = acc + parseFloat(item.forSale)\r\n          }\r\n          return acc\r\n        }, 0)}\r\n      </p>\r\n      <p>\r\n        Прибыль{' '}\r\n        {data.reduce((acc, item) => {\r\n          if (item.profit !== '') {\r\n            acc = acc + parseFloat(item.profit)\r\n          }\r\n          return acc\r\n        }, 0)}\r\n      </p>\r\n\r\n      <p>\r\n        Итого{' '}\r\n        {data.reduce((acc, item) => {\r\n          if (item.profit !== '') {\r\n            acc = acc + parseFloat(item.profit)\r\n          }\r\n          return acc\r\n        }, 0)}\r\n      </p>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Report\r\n","import * as React from 'react'\r\nimport { Table, Button, DatePicker } from 'antd/lib'\r\nimport 'antd/dist/antd.css'\r\nimport { useEffect, useState } from 'react'\r\nimport { Car, Service } from './service'\r\nimport EditModalCar from './EditModalCar'\r\nimport CreateModalCar from './CreateModalCar'\r\nimport Filters from './Filters'\r\nimport Report from \"./Report\";\r\n\r\ninterface Props {\r\n  service: Service\r\n}\r\n\r\nconst TableCar = ({ service }: Props) => {\r\n  const columns = [\r\n    {\r\n      title: '№',\r\n      dataIndex: 'key',\r\n      key: 'key',\r\n    },\r\n    {\r\n      title: 'Номер',\r\n      dataIndex: 'carNumber',\r\n      key: 'carNumber',\r\n    },\r\n    {\r\n      title: 'Год выпуска',\r\n      key: 'buildCar',\r\n      render: (value: any) => (value.buildCar ? new Date(+value.buildCar).toLocaleDateString() : ''),\r\n    },\r\n    {\r\n      title: 'Тех Осмотр',\r\n      key: 'carCheck',\r\n      render: (value: any) => (value.carCheck ? new Date(+value.carCheck).toLocaleDateString() : ''),\r\n    },\r\n    {\r\n      title: 'Модель',\r\n      dataIndex: 'model',\r\n      key: 'model',\r\n    },\r\n    {\r\n      title: 'Марка',\r\n      dataIndex: 'mark',\r\n      key: 'mark',\r\n    },\r\n\r\n    {\r\n      title: 'Пробег',\r\n      dataIndex: 'mileage',\r\n      key: 'mileage',\r\n    },\r\n    {\r\n      title: 'Цена покупки',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n    },\r\n    {\r\n      title: 'Расходы',\r\n      dataIndex: 'costs',\r\n      key: 'costs',\r\n    },\r\n    {\r\n      title: 'На продажу',\r\n      dataIndex: 'forSale',\r\n      key: 'forSale',\r\n    },\r\n    {\r\n      title: 'Дата покупки',\r\n      key: 'buyDay',\r\n      render: (value: any) => {\r\n        console.log(value.buildCar)\r\n        return value.buyDay ? new Date(+value.buyDay).toLocaleDateString() : ''\r\n      },\r\n    },\r\n    {\r\n      title: 'Дата продажи',\r\n      key: 'cellDay',\r\n      render: (value: any) => (value.cellDay ? new Date(+value.cellDay).toLocaleDateString() : ''),\r\n    },\r\n    {\r\n      title: 'Владелец',\r\n      dataIndex: 'owner',\r\n      key: 'owner',\r\n    },\r\n    {\r\n      title: 'Продана',\r\n      dataIndex: 'isCell',\r\n      key: 'isCell',\r\n    },\r\n    {\r\n      title: 'Прибыль',\r\n      dataIndex: 'profit',\r\n      key: 'profit',\r\n    },\r\n    {\r\n      key: 'action',\r\n      render: (value: any) => {\r\n        return (\r\n          <span>\r\n            <Button type=\"primary\" onClick={() => setOpenedEditModal(value.key)}>\r\n              Редактировать\r\n            </Button>\r\n            <EditModalCar\r\n              isOpened={isOpenedEditModal === value.key}\r\n              row={value}\r\n              close={setOpenedEditModal}\r\n              service={service}\r\n            />\r\n          </span>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  const [data, setData] = useState([{}])\r\n  const [isOpenedEditModal, setOpenedEditModal] = useState('')\r\n  const [isOpenedModal, setOpenedModal] = useState(false)\r\n  const [isOpenReportModal, setOpenReportModal] = useState(false)\r\n  const [dataCar, setDataCar] = useState(service.dataCar)\r\n\r\n  useEffect(() => {\r\n    service.fetchData2(setDataCar as any)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (dataCar) {\r\n      setData(service.dataCar)\r\n    }\r\n  }, [dataCar])\r\n\r\n  return (\r\n    <>\r\n      <Filters service={service} setDataCar={setData} />\r\n\r\n      <span>\r\n        <Button type=\"primary\" onClick={() => setOpenReportModal(true)}>\r\n          Отчет\r\n        </Button>\r\n        {isOpenReportModal && (\r\n          <Report isOpened={isOpenReportModal} close={setOpenReportModal} data={service.filterData} />\r\n        )}\r\n      </span>\r\n\r\n      <span>\r\n        <Button type=\"primary\" onClick={() => setOpenedModal(true)}>\r\n          Добавить\r\n        </Button>\r\n        {isOpenedModal && (\r\n          <CreateModalCar isOpened={isOpenedModal} row={columns} close={setOpenedModal} service={service} />\r\n        )}\r\n      </span>\r\n\r\n      <Table columns={columns} dataSource={data} pagination={false} bordered={true} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TableCar\r\n","import * as firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nexport interface Filter {\r\n  model: string\r\n  mark: string\r\n  time: {\r\n    start: string\r\n    end: string\r\n  }\r\n  isCell: string\r\n}\r\n\r\nexport interface FirebaseData {\r\n  [key: string]: {\r\n    car: Car\r\n  }\r\n}\r\n\r\nexport interface Car {\r\n  key: string\r\n  carNumber: string\r\n  buildCar: string\r\n  carCheck: string\r\n  model: string\r\n  mark: string\r\n  mileage: string\r\n  price: string\r\n  costs: string\r\n  forSale: string\r\n  buyDay: string\r\n  cellDay: string\r\n  owner: string\r\n  isCell: string\r\n  profit: string\r\n}\r\n\r\nexport type Data = Car[]\r\n\r\nexport class Service {\r\n  firebaseConfig = {\r\n    apiKey: 'AIzaSyAS3Tmzpw_YfZnpGdisPnfXZjN8BScjhL0',\r\n    authDomain: 'lehtierittely-bc08d.firebaseapp.com',\r\n    databaseURL: 'https://lehtierittely-bc08d.firebaseio.com',\r\n    projectId: 'lehtierittely-bc08d',\r\n    storageBucket: 'lehtierittely-bc08d.appspot.com',\r\n    messagingSenderId: '455064458920',\r\n    appId: '1:455064458920:web:b70dc58166e8de8996d49d',\r\n  }\r\n\r\n  db: any\r\n\r\n  dataCar: Data = []\r\n  allData: Data = []\r\n  filterData: Data = []\r\n\r\n  constructor() {\r\n    firebase.initializeApp(this.firebaseConfig)\r\n    this.db = firebase.firestore()\r\n  }\r\n\r\n  fetchData2(dispatch: (data: Data) => void) {\r\n    this.db\r\n      .collection('car')\r\n      .doc('NB9Di5WqKJ4Ti29UATtd')\r\n      .onSnapshot(\r\n        (doc: any) => {\r\n          const data = doc.data() as FirebaseData\r\n          this.dataCar = Object.values(data).map(item => item.car)\r\n          this.filterData = Object.values(data).map(item => item.car)\r\n          this.allData = Object.values(data).map(item => item.car)\r\n          dispatch(this.dataCar)\r\n        },\r\n        () => {}\r\n      )\r\n  }\r\n\r\n  addData2(car: Car) {\r\n    console.log(car.key)\r\n    this.db\r\n      .collection('car')\r\n      .doc('NB9Di5WqKJ4Ti29UATtd')\r\n      .set(\r\n        {\r\n          [car.key]: {\r\n            car,\r\n          },\r\n        },\r\n        { merge: true }\r\n      )\r\n      .then(() => {\r\n        console.log('Document written with ID: ')\r\n      })\r\n      .catch(function() {\r\n        console.error('Error adding document: ')\r\n      })\r\n  }\r\n\r\n  editData2(car: Car) {\r\n    this.db\r\n      .collection('car')\r\n      .doc('NB9Di5WqKJ4Ti29UATtd')\r\n      .update({\r\n        [car.key]: {\r\n          car,\r\n        },\r\n      })\r\n      .then(() => {\r\n        console.log('Document written with ID: ')\r\n      })\r\n      .catch(function() {\r\n        console.error('Error adding document: ')\r\n      })\r\n  }\r\n  filterMark(filterType: Filter, setDataCar: (data: Data) => void) {\r\n    this.filterData = this.filterData.filter(item => {\r\n      return item.mark === filterType.mark\r\n    })\r\n    setDataCar(this.filterData)\r\n  }\r\n\r\n  filterModel(filterType: Filter, setDataCar: (data: Data) => void) {\r\n    this.filterData = this.filterData.filter(item => {\r\n      return item.model === filterType.model\r\n    })\r\n    setDataCar(this.filterData)\r\n  }\r\n\r\n  filterCell(filterType: Filter, setDataCar: (data: Data) => void) {\r\n    this.filterData = this.filterData.filter(item => {\r\n      return item.isCell === filterType.isCell\r\n    })\r\n    setDataCar(this.filterData)\r\n  }\r\n\r\n  filterTime(filterType: Filter, setDataCar: (data: Data) => void) {\r\n    this.filterData = this.filterData.filter(item => {\r\n      console.log(+item.buyDay, +filterType.time.start, +item.cellDay, +filterType.time.end)\r\n      return +item.buyDay >= +filterType.time.start && +item.cellDay <= +filterType.time.end\r\n    })\r\n    console.log(this.filterData)\r\n    setDataCar(this.filterData)\r\n  }\r\n\r\n  reset(setDataCar: (data: Data) => void) {\r\n    this.filterData = this.allData\r\n    setDataCar(this.dataCar)\r\n  }\r\n\r\n  report() {\r\n    return this.filterData\r\n  }\r\n}\r\n","import React from 'react'\nimport './App.css'\nimport TableCar from './table'\nimport { Service } from './service'\n\nconst App = () => {\n  const service = new Service()\n\n  return (\n    <div className=\"App\">\n      <TableCar service={service} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}