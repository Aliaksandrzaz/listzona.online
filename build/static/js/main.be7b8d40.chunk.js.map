{"version":3,"sources":["helpers.ts","kit/input.tsx","EditModalCar.tsx","CreateModalCar.tsx","Report.tsx","Filters.tsx","table.tsx","service.ts","App.tsx","index.tsx"],"names":["parseTime","e","Date","parse","format","split","toString","Input","dispatch","type","title","className","value","onChange","EditModalCar","isOpened","row","close","service","useState","key","carNumber","buildCar","carCheck","model","mark","mileage","price","costs","forSale","buyDay","cellDay","owner","isCell","profit","newCar","setNewCar","visible","onOk","editData2","onCancel","target","moment","Group","CreateModalCar","dataCar","length","addData2","Report","data","bodyStyle","height","fontSize","fontWeight","filter","item","reduce","acc","parseFloat","Filters","setDataCar","time","start","end","filters","setFilters","isOpenReportModal","setOpenReportModal","placeholder","onClick","reset","TableCar","columns","dataIndex","render","toLocaleDateString","src","setOpenedEditModal","isOpenedEditModal","isOpenedModal","setOpenedModal","isOpenedFilters","setOpenedFilters","onlyHasCar","setOnlyHasCar","useEffect","fetchData2","dataSource","pagination","bordered","Service","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","db","allData","filterData","firebase","this","collection","doc","onSnapshot","Object","values","map","car","reverse","set","merge","then","console","log","catch","error","update","filterType","hasCar","startTime","finishTime","App","ReactDOM","document","getElementById"],"mappings":"sRAAO,SAASA,EAAUC,GACxB,OAAOC,KAAKC,MAAMF,EAAEG,SAASC,MAAM,KAAK,IAAIC,WCQvC,IAAMC,EAAQ,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,SAAUC,EAAyB,EAAzBA,KAAMC,EAAmB,EAAnBA,MACtC,OACE,uBAAKC,UAAU,eACb,4BAAOD,GACP,yBAAOE,MAAOH,EAAMI,SAAUL,M,iBCmMrBM,EAjMM,SAAC,GAA8C,IAA5CC,EAA2C,EAA3CA,SAAUC,EAAiC,EAAjCA,IAAKC,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAAqB,EACrCC,mBAAS,CACnCC,IAAKJ,EAAII,IACTC,UAAWL,EAAIK,UACfC,SAAUN,EAAIM,SACdC,SAAUP,EAAIO,SACdC,MAAOR,EAAIQ,MACXC,KAAMT,EAAIS,KACVC,QAASV,EAAIU,QACbC,MAAOX,EAAIW,MACXC,MAAOZ,EAAIY,MACXC,QAASb,EAAIa,QACbC,OAAQd,EAAIc,OACZC,QAASf,EAAIe,QACbC,MAAOhB,EAAIgB,MACXC,OAAQjB,EAAIiB,OACZC,OAAQlB,EAAIkB,SAhBmD,mBAC1DC,EAD0D,KAClDC,EADkD,KAmBjE,OACE,gCACE,gBAAC,QAAD,CACE1B,MAAM,iFACN2B,QAAStB,EACTuB,KAAM,WACJpB,EAAQqB,UAAUJ,GAClBlB,EAAM,KAERuB,SAAU,kBAAMvB,EAAM,MAEtB,2BACE,gBAAC,EAAD,CACER,KAAM0B,EAAOd,UACbb,SAAU,SAACP,GACTmC,EAAU,eACLD,EADI,CAEPd,UAAWpB,EAAEwC,OAAO7B,UAGxBF,MAAM,wEAER,uBAAKC,UAAU,qBACb,wBAAMA,UAAU,sBAAhB,iEACA,gBAAC,aAAD,CACEP,OAAO,aACPQ,MAA2B,KAApBuB,EAAOb,SAAkB,KAAOoB,KAAQP,EAAOb,UACtDT,SAAU,SAAAZ,GAAC,OACTmC,EAAU,eACLD,EADI,CAEPb,SAAgB,OAANrB,EAAaD,EAAUC,GAAK,UAK9C,uBAAKU,UAAU,qBACb,wBAAMA,UAAU,sBAAhB,2DACA,gBAAC,aAAD,CACEP,OAAO,aACPQ,MAA2B,KAApBuB,EAAOZ,SAAkB,KAAOmB,KAAQP,EAAOZ,UACtDV,SAAU,SAAAZ,GACRmC,EAAU,eACLD,EADI,CAEPZ,SAAgB,OAANtB,EAAaD,EAAUC,GAAK,UAK9C,gBAAC,EAAD,CACEQ,KAAM0B,EAAOX,MACbhB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPX,MAAOvB,EAAEwC,OAAO7B,UAGpBF,MAAM,yCAER,gBAAC,EAAD,CACED,KAAM0B,EAAOV,KACbjB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPV,KAAMxB,EAAEwC,OAAO7B,UAGnBF,MAAM,mCAER,gBAAC,EAAD,CACED,KAAM0B,EAAOT,QACblB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPT,QAASzB,EAAEwC,OAAO7B,UAGtBF,MAAM,yCAER,gBAAC,EAAD,CACED,KAAM0B,EAAOR,MACbnB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPR,MAAO1B,EAAEwC,OAAO7B,UAGpBF,MAAM,wEAER,gBAAC,EAAD,CACED,KAAM0B,EAAOP,MACbpB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPP,MAAO3B,EAAEwC,OAAO7B,UAGpBF,MAAM,+CAER,gBAAC,EAAD,CACED,KAAM0B,EAAON,QACbrB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPN,QAAS5B,EAAEwC,OAAO7B,UAGtBF,MAAM,4DAER,uBAAKC,UAAU,qBACb,wBAAMA,UAAU,sBAAhB,uEACA,gBAAC,aAAD,CACEP,OAAO,aACPQ,MAAyB,KAAlBuB,EAAOL,OAAgB,KAAOY,KAAQP,EAAOL,QACpDjB,SAAU,SAAAZ,GACRmC,EAAU,eACLD,EADI,CAEPL,OAAc,OAAN7B,EAAaD,EAAUC,GAAK,UAK5C,uBAAKU,UAAU,qBACb,wBAAMA,UAAU,sBAAhB,uEACA,gBAAC,aAAD,CACEP,OAAO,aACPQ,MAA0B,KAAnBuB,EAAOJ,QAAiB,KAAOW,KAAQP,EAAOJ,SACrDlB,SAAU,SAAAZ,GACRmC,EAAU,eACLD,EADI,CAEPJ,QAAe,OAAN9B,EAAaD,EAAUC,GAAK,UAK7C,gBAAC,EAAD,CACEQ,KAAM0B,EAAOH,MACbxB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPH,MAAO/B,EAAEwC,OAAO7B,UAGpBF,MAAM,qDAER,uBAAKC,UAAU,sBACb,gBAAC,QAAMgC,MAAP,CACE9B,SAAU,SAAAZ,GACRmC,EAAU,eACLD,EADI,CAEPF,OAAQhC,EAAEwC,OAAO7B,UAGrBA,MAAOuB,EAAOF,QAEd,gBAAC,QAAD,CAAOrB,MAAO,QAAd,8CACA,gBAAC,QAAD,CAAOA,MAAO,OAAd,wDAGJ,gBAAC,EAAD,CACEH,KAAM0B,EAAOD,OACb1B,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPD,OAAQjC,EAAEwC,OAAO7B,UAGrBF,MAAM,mDCEHkC,EA7LQ,SAAC,GAAyC,IAAvC7B,EAAsC,EAAtCA,SAAUE,EAA4B,EAA5BA,MAAOC,EAAqB,EAArBA,QAAqB,EAClCC,mBAAS,CACnCC,IAAI,GAAD,OAAKF,EAAQ2B,QAAQC,OAAS,GACjCzB,UAAW,GACXC,SAAU,GACVC,SAAU,GACVC,MAAO,GACPC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,MAAO,GACPC,QAAS,GACTC,OAAQ,GACRC,QAAS,GACTC,MAAO,GACPC,OAAQ,MACRC,OAAQ,KAhBoD,mBACvDC,EADuD,KAC/CC,EAD+C,KAmB9D,OACE,gCACE,gBAAC,QAAD,CACE1B,MAAM,mDACN2B,QAAStB,EACTuB,KAAM,WACJpB,EAAQ6B,SAASZ,GACjBlB,GAAM,IAERuB,SAAU,kBAAMvB,GAAM,KAEtB,2BACE,gBAAC,EAAD,CACER,KAAM0B,EAAOd,UACbb,SAAU,SAACP,GACTmC,EAAU,eACLD,EADI,CAEPd,UAAWpB,EAAEwC,OAAO7B,UAGxBF,MAAM,wEAER,uBAAKC,UAAU,qBACb,wBAAMA,UAAU,sBAAhB,iEACA,gBAAC,aAAD,CACEP,OAAO,aACPS,SAAU,SAAAZ,GAAC,OACTmC,EAAU,eACLD,EADI,CAEPb,SAAgB,OAANrB,EAAaD,EAAUC,GAAK,UAK9C,uBAAKU,UAAU,qBACb,wBAAMA,UAAU,sBAAhB,2DACA,gBAAC,aAAD,CACEP,OAAO,aACPS,SAAU,SAAAZ,GACRmC,EAAU,eACLD,EADI,CAEPZ,SAAgB,OAANtB,EAAaD,EAAUC,GAAK,UAK9C,gBAAC,EAAD,CACEQ,KAAM0B,EAAOX,MACbhB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPX,MAAOvB,EAAEwC,OAAO7B,UAGpBF,MAAM,yCAER,gBAAC,EAAD,CACED,KAAM0B,EAAOV,KACbjB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPV,KAAMxB,EAAEwC,OAAO7B,UAGnBF,MAAM,mCAER,gBAAC,EAAD,CACED,KAAM0B,EAAOT,QACblB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPT,QAASzB,EAAEwC,OAAO7B,UAGtBF,MAAM,yCAER,gBAAC,EAAD,CACED,KAAM0B,EAAOR,MACbnB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPR,MAAO1B,EAAEwC,OAAO7B,UAGpBF,MAAM,wEAER,gBAAC,EAAD,CACED,KAAM0B,EAAOP,MACbpB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPP,MAAO3B,EAAEwC,OAAO7B,UAGpBF,MAAM,+CAER,gBAAC,EAAD,CACED,KAAM0B,EAAON,QACbrB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPN,QAAS5B,EAAEwC,OAAO7B,UAGtBF,MAAM,4DAER,uBAAKC,UAAU,qBACb,wBAAMA,UAAU,sBAAhB,uEACA,gBAAC,aAAD,CACEP,OAAO,aACPS,SAAU,SAAAZ,GACRmC,EAAU,eACLD,EADI,CAEPL,OAAc,OAAN7B,EAAaD,EAAUC,GAAK,UAK5C,uBAAKU,UAAU,qBACb,wBAAMA,UAAU,sBAAhB,uEACA,gBAAC,aAAD,CACEP,OAAO,aACPS,SAAU,SAAAZ,GACRmC,EAAU,eACLD,EADI,CAEPJ,QAAe,OAAN9B,EAAaD,EAAUC,GAAK,UAK7C,gBAAC,EAAD,CACEQ,KAAM0B,EAAOH,MACbxB,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPH,MAAO/B,EAAEwC,OAAO7B,UAGpBF,MAAM,qDAER,uBAAKC,UAAU,sBACb,gBAAC,QAAMgC,MAAP,CACE9B,SAAU,SAAAZ,GACRmC,EAAU,eACLD,EADI,CAEPF,OAAQhC,EAAEwC,OAAO7B,UAGrBA,MAAOuB,EAAOF,QAEd,gBAAC,QAAD,CAAOrB,MAAO,QAAd,8CACA,gBAAC,QAAD,CAAOA,MAAO,OAAd,wDAGJ,gBAAC,EAAD,CACEH,KAAM0B,EAAOD,OACb1B,SAAU,SAACP,GAAD,OACRmC,EAAU,eACLD,EADI,CAEPD,OAAQjC,EAAEwC,OAAO7B,UAGrBF,MAAM,mD,2BC/HHsC,EAzDA,SAAC,GAAsC,IAApCjC,EAAmC,EAAnCA,SAAUE,EAAyB,EAAzBA,MAAOgC,EAAkB,EAAlBA,KAMjC,OACE,gBAAC,QAAD,CACEC,UAPU,CACZC,OAAQ,IACRC,SAAU,GACVC,WAAY,KAKV3C,MAAM,iCACN2B,QAAStB,EACTuB,KAAM,WACJrB,GAAM,IAERuB,SAAU,kBAAMvB,GAAM,KAEtB,iGAAkBgC,EAAKK,QAAO,SAAAC,GAAI,MAAoB,QAAhBA,EAAKtB,UAAkBa,QAC7D,yEAEGG,EAAKO,QAAO,SAACC,EAAKF,GAIjB,MAHmB,KAAfA,EAAK5B,QACP8B,GAAYC,WAAWH,EAAK5B,QAEvB8B,IACN,IAEL,yEAEGR,EAAKO,QAAO,SAACC,EAAKF,GAIjB,MAHmB,KAAfA,EAAK3B,QACP6B,GAAYC,WAAWH,EAAK3B,QAEvB6B,IACN,IAEL,wEAEGR,EAAKO,QAAO,SAACC,EAAKF,GAIjB,MAHqB,KAAjBA,EAAK1B,UACP4B,GAAYC,WAAWH,EAAK1B,UAEvB4B,IACN,IAEL,wEAEGR,EAAKO,QAAO,SAACC,EAAKF,GAIjB,MAHoB,KAAhBA,EAAKrB,SACPuB,GAAYC,WAAWH,EAAKrB,SAEvBuB,IACN,MC0EIE,EA1HC,SAAC,GAA6C,IAA3CzC,EAA0C,EAA1CA,QAAS0C,EAAiC,EAAjCA,WAAYf,EAAqB,EAArBA,QAAqB,EAC7B1B,mBAAS,CACrCK,MAAO,GACPC,KAAM,GACNoC,KAAM,CACJC,MAAO,GACPC,IAAK,IAEP9B,OAAQ,QARiD,mBACpD+B,EADoD,KAC3CC,EAD2C,OAWX9C,oBAAS,GAXE,mBAWpD+C,EAXoD,KAWjCC,EAXiC,KAa3D,OACE,uBAAKxD,UAAU,WACb,uBAAKA,UAAU,gBACb,gBAAC,IAAD,CACEP,OAAO,aACPgE,YAAY,uCACZxD,MAA8B,KAAvBoD,EAAQH,KAAKC,MAAe,KAAOpB,KAAQsB,EAAQH,KAAKC,OAC/DjD,SAAU,SAAAZ,GACRgE,EAAW,eACND,EADK,CAERH,KAAK,eACAG,EAAQH,KADT,CAEFC,MAAa,OAAN7D,EAAaD,EAAUC,GAAK,WAK3C,gBAAC,IAAD,CACEmE,YAAY,iCACZhE,OAAO,aACPQ,MAA4B,KAArBoD,EAAQH,KAAKE,IAAa,KAAOrB,KAAQsB,EAAQH,KAAKE,KAC7DlD,SAAU,SAAAZ,GAAC,OACTgE,EAAW,eACND,EADK,CAERH,KAAK,eACAG,EAAQH,KADT,CAEFE,IAAW,OAAN9D,EAAA,WAAiBD,EAAUC,GAAK,KAAU,YAOzD,uBAAKU,UAAU,gBACb,yBACEyD,YAAY,uCACZxD,MAAOoD,EAAQxC,MACfX,SAAU,SAAAZ,GAAC,OACTgE,EAAW,eACND,EADK,CAERxC,MAAOvB,EAAEwC,OAAO7B,aAMxB,uBAAKD,UAAU,gBACb,yBACEC,MAAOoD,EAAQvC,KACf2C,YAAY,iCACZvD,SAAU,SAAAZ,GACR,OAAOgE,EAAW,eACbD,EADY,CAEfvC,KAAMxB,EAAEwC,OAAO7B,aAMvB,2BACE,gBAAC,IAAM+B,MAAP,CACE9B,SAAU,SAAAZ,GACRgE,EAAW,eACND,EADK,CAER/B,OAAQhC,EAAEwC,OAAO7B,UAGrBA,MAAOoD,EAAQ/B,QAEf,gBAAC,IAAD,CAAOrB,MAAM,OAAb,sBACA,gBAAC,IAAD,CAAOA,MAAM,QAAb,8CACA,gBAAC,IAAD,CAAOA,MAAM,OAAb,wDAIJ,gBAAC,IAAD,CACEH,KAAK,UACL4D,QAAS,WACPnD,EAAQoD,MAAMV,GACdK,EAAW,CACTzC,MAAO,GACPC,KAAM,GACNoC,KAAM,CACJC,MAAO,GACPC,IAAK,IAEP9B,OAAQ,UAXd,oDAkBA,gBAAC,IAAD,CAAQxB,KAAK,UAAU4D,QAAS,kBAAMnD,EAAQoC,OAAOU,EAASJ,KAA9D,0DAIA,4BACE,gBAAC,IAAD,CAAQnD,KAAK,UAAU4D,QAAS,kBAAMF,GAAmB,KAAzD,kCAGCD,GACC,gBAAC,EAAD,CAAQnD,SAAUmD,EAAmBjD,MAAOkD,EAAoBlB,KAAMJ,OC8CjE0B,EAjKE,SAAC,GAAwB,IAAtBrD,EAAqB,EAArBA,QACZsD,EAAU,CACd,CACE9D,MAAO,SACP+D,UAAW,MACXrD,IAAK,OAEP,CACEV,MAAO,iCACP+D,UAAW,YACXrD,IAAK,aAEP,CACEV,MAAO,gEACPU,IAAK,WACLsD,OAAQ,SAAC9D,GAAD,OAAiBA,EAAMU,SAAW,IAAIpB,MAAMU,EAAMU,UAAUqD,qBAAuB,KAE7F,CACEjE,MAAO,0DACPU,IAAK,WACLsD,OAAQ,SAAC9D,GAAD,OAAiBA,EAAMW,SAAW,IAAIrB,MAAMU,EAAMW,UAAUoD,qBAAuB,KAE7F,CACEjE,MAAO,uCACP+D,UAAW,QACXrD,IAAK,SAEP,CACEV,MAAO,iCACP+D,UAAW,OACXrD,IAAK,QAGP,CACEV,MAAO,uCACP+D,UAAW,UACXrD,IAAK,WAEP,CACEV,MAAO,sEACP+D,UAAW,QACXrD,IAAK,SAEP,CACEV,MAAO,6CACP+D,UAAW,QACXrD,IAAK,SAEP,CACEV,MAAO,0DACP+D,UAAW,UACXrD,IAAK,WAEP,CACEV,MAAO,sEACPU,IAAK,SACLsD,OAAQ,SAAC9D,GACP,OAAOA,EAAMkB,OAAS,IAAI5B,MAAMU,EAAMkB,QAAQ6C,qBAAuB,KAGzE,CACEjE,MAAO,sEACPU,IAAK,UACLsD,OAAQ,SAAC9D,GAAD,OAAiBA,EAAMmB,QAAU,IAAI7B,MAAMU,EAAMmB,SAAS4C,qBAAuB,KAE3F,CACEjE,MAAO,mDACP+D,UAAW,QACXrD,IAAK,SAEP,CACEV,MAAO,6CACPU,IAAK,SACLsD,OAAQ,SAAC9D,GAAD,MAAkC,QAAjBA,EAAMqB,OAAmB,oDAAc,+CAElE,CACEvB,MAAO,6CACP+D,UAAW,SACXrD,IAAK,UAEP,CACEA,IAAK,SACLsD,OAAQ,SAAC9D,GACP,OACE,4BACE,uBACEgE,IAAI,+DACJP,QAAS,kBAAMQ,EAAmBjE,EAAMQ,QAE1C,gBAAC,EAAD,CACEL,SAAU+D,IAAsBlE,EAAMQ,IACtCJ,IAAKJ,EACLK,MAAO4D,EACP3D,QAASA,QA7FkB,EAqGSC,mBAAS,IArGlB,mBAqGhC2D,EArGgC,KAqGbD,EArGa,OAsGC1D,oBAAS,GAtGV,mBAsGhC4D,EAtGgC,KAsGjBC,EAtGiB,OAuGK7D,oBAAS,GAvGd,mBAuGhC8D,EAvGgC,KAuGfC,EAvGe,OAwGT/D,mBAASD,EAAQ2B,SAxGR,mBAwGhCA,EAxGgC,KAwGvBe,EAxGuB,OAyGHzC,oBAAS,GAzGN,mBAyGhCgE,EAzGgC,KAyGpBC,EAzGoB,KA2HvC,OAhBAC,qBAAU,WACRnE,EAAQoE,WAAW1B,KAClB,IAEHyB,qBAAU,WAENxC,EAAQC,OAAS,GACjBqC,GACAtC,EAAQC,SAAW5B,EAAQ2B,QAAQS,QAAO,SAAAC,GAAI,MAAoB,QAAhBA,EAAKtB,UAAkBa,OAEzEc,EAAW1C,EAAQ2B,QAAQS,QAAO,SAAAC,GAAI,MAAoB,QAAhBA,EAAKtB,WACtCY,EAAQC,OAAS,IAAMqC,GAActC,EAAQC,SAAW5B,EAAQ2B,QAAQC,QACjFc,EAAW1C,EAAQ2B,WAEpB,CAACsC,EAAYtC,IAGd,gCACGoC,GAAmB,gBAAC,EAAD,CAAS/D,QAASA,EAAS0C,WAAYA,EAAYf,QAASA,IAEhF,uBAAKlC,UAAU,WACb,4BACE,gBAAC,SAAD,CAAQF,KAAK,UAAU4D,QAAS,kBAAMe,GAAc,KAApD,uBAKF,4BACE,gBAAC,SAAD,CAAQ3E,KAAK,UAAU4D,QAAS,kBAAMe,GAAc,KAApD,sDAKF,4BACE,gBAAC,SAAD,CAAQ3E,KAAK,UAAU4D,QAAS,kBAAMW,GAAe,KAArD,oDAGCD,GACC,gBAAC,EAAD,CAAgBhE,SAAUgE,EAAe9D,MAAO+D,EAAgB9D,QAASA,KAI7E,4BACE,gBAAC,SAAD,CAAQT,KAAK,UAAU4D,QAAS,kBAAMa,GAAkBD,KAAxD,0CAMJ,gBAAC,QAAD,CAAOT,QAASA,EAASe,WAAY1C,EAAS2C,YAAY,EAAOC,UAAU,M,oCClIpEC,G,OAAb,WAiBE,aAAe,yBAhBfC,eAAiB,CACfC,OAAQ,0CACRC,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,6CASK,KANdC,QAMc,OAJdtD,QAAgB,GAIF,KAHduD,QAAgB,GAGF,KAFdC,WAAmB,GAGjBC,gBAAuBC,KAAKZ,gBAC5BY,KAAKJ,GAAKG,cAnBd,uDAsBa9F,GAAiC,IAAD,OACzC+F,KAAKJ,GACFK,WAAW,OACXC,IAAI,wBACJC,YACC,SAACD,GACC,IAAMxD,EAAOwD,EAAIxD,OACjB,EAAKJ,QAAU8D,OAAOC,OAAO3D,GAC1B4D,KAAI,SAAAtD,GAAI,OAAIA,EAAKuD,OACjBC,UAEH,EAAKV,WAAaM,OAAOC,OAAO3D,GAC7B4D,KAAI,SAAAtD,GAAI,OAAIA,EAAKuD,OACjBC,UACH,EAAKX,QAAUO,OAAOC,OAAO3D,GAC1B4D,KAAI,SAAAtD,GAAI,OAAIA,EAAKuD,OACjBC,UACHvG,EAAS,EAAKqC,YAEhB,iBAzCR,+BA6CWiE,GACPP,KAAKJ,GACFK,WAAW,OACXC,IAAI,wBACJO,IAHH,eAKOF,EAAI1F,IAAM,CACT0F,QAGJ,CAAEG,OAAO,IAEVC,MAAK,WACJC,QAAQC,IAAI,iCAEbC,OAAM,WACLF,QAAQG,MAAM,gCA7DtB,gCAiEYR,GACRP,KAAKJ,GACFK,WAAW,OACXC,IAAI,wBACJc,OAHH,eAIKT,EAAI1F,IAAM,CACT0F,SAGHI,MAAK,WACJC,QAAQC,IAAI,iCAEbC,OAAM,WACLF,QAAQG,MAAM,gCA9EtB,iCAiFa7G,EAAcmD,GAWvBA,EAVa2C,KAAK1D,QAAQS,QAAO,SAAAC,GAC/B,MAAa,QAAT9C,EACqB,QAAhB8C,EAAKtB,OACM,SAATxB,EACc,SAAhB8C,EAAKtB,OAELsB,QAxFf,6BA+FSiE,EAAoB5D,GACzB,IAAM6D,EACkB,KAAtBD,EAAWvF,OACPsE,KAAKF,WAAW/C,QAAO,SAAAC,GACrB,MAA0B,QAAtBiE,EAAWvF,OACU,QAAhBsB,EAAKtB,OACmB,SAAtBuF,EAAWvF,OACG,SAAhBsB,EAAKtB,OAELsB,KAGXgD,KAAKH,QAEL5E,EAA6B,KAArBgG,EAAWhG,MAAeiG,EAAOnE,QAAO,SAAAC,GAAI,OAAIA,EAAK/B,QAAUgG,EAAWhG,SAASiG,EAE3FhG,EAA2B,KAApB+F,EAAW/F,KAAcD,EAAM8B,QAAO,SAAAC,GAAI,OAAIA,EAAK9B,OAAS+F,EAAW/F,QAAQD,EAEtFkG,EACsB,KAA1BF,EAAW3D,KAAKC,MACZrC,EAAK6B,QAAO,SAAAC,GAAI,MAAoB,KAAhBA,EAAKzB,SAAkByB,EAAKzB,SAAW0F,EAAW3D,KAAKC,SAC3ErC,EAEAkG,EACoB,KAAxBH,EAAW3D,KAAKE,IACZ2D,EAAUpE,QAAO,SAAAC,GAAI,MAAoB,KAAhBA,EAAKzB,SAAkByB,EAAKzB,SAAW0F,EAAW3D,KAAKE,OAChF2D,EAENnB,KAAK1D,QAAU8E,EACf/D,EAAW2C,KAAK1D,WA5HpB,4BA+HQe,GACJ2C,KAAKF,WAAaE,KAAKH,QACvBxC,EAAW2C,KAAKH,WAjIpB,+BAqII,OAAOG,KAAKF,aArIhB,iCAwIazC,GACT2C,KAAKF,WAAaE,KAAKH,QACvBxC,EAAW2C,KAAKH,aA1IpB,MCxBewB,EAVH,WACV,IAAM1G,EAAU,IAAIwE,EAEpB,OACE,yBAAK/E,UAAU,OACb,kBAAC,EAAD,CAAUO,QAASA,MCLzB2G,IAASnD,OAAO,kBAAC,EAAD,MAASoD,SAASC,eAAe,W","file":"static/js/main.be7b8d40.chunk.js","sourcesContent":["export function parseTime(e: any): string {\r\n  return Date.parse(e.format().split('T')[0]).toString()\r\n}\r\n","import * as React from 'react'\r\n\r\ninterface Props {\r\n  dispatch: (e:any) => void\r\n  type: string\r\n  title: string\r\n\r\n}\r\n\r\nexport const Input = ({ dispatch, type, title }: Props) => {\r\n  return (\r\n    <div className=\"create-item\">\r\n      <span>{title}</span>\r\n      <input value={type} onChange={dispatch} />\r\n    </div>\r\n  )\r\n}\r\n","import * as React from 'react'\r\nimport { DatePicker, Modal, Radio } from 'antd/lib'\r\nimport { useState } from 'react'\r\nimport { Service } from './service'\r\nimport { parseTime } from './helpers'\r\nimport { Input } from './kit/input'\r\nimport moment from 'moment'\r\n\r\ninterface Props {\r\n  isOpened: boolean\r\n  row: any\r\n  close: (isOpen: string) => void\r\n  service: Service\r\n}\r\n\r\nconst EditModalCar = ({ isOpened, row, close, service }: Props) => {\r\n  const [newCar, setNewCar] = useState({\r\n    key: row.key,\r\n    carNumber: row.carNumber,\r\n    buildCar: row.buildCar,\r\n    carCheck: row.carCheck,\r\n    model: row.model,\r\n    mark: row.mark,\r\n    mileage: row.mileage,\r\n    price: row.price,\r\n    costs: row.costs,\r\n    forSale: row.forSale,\r\n    buyDay: row.buyDay,\r\n    cellDay: row.cellDay,\r\n    owner: row.owner,\r\n    isCell: row.isCell,\r\n    profit: row.profit,\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Редактировать\"\r\n        visible={isOpened}\r\n        onOk={() => {\r\n          service.editData2(newCar)\r\n          close('')\r\n        }}\r\n        onCancel={() => close('')}\r\n      >\r\n        <div>\r\n          <Input\r\n            type={newCar.carNumber}\r\n            dispatch={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              setNewCar({\r\n                ...newCar,\r\n                carNumber: e.target.value,\r\n              })\r\n            }}\r\n            title=\"Номер машины\"\r\n          />\r\n          <div className=\"create-item__time\">\r\n            <span className=\"create-item__title\">Год выпуска</span>\r\n            <DatePicker\r\n              format=\"DD-MM-YYYY\"\r\n              value={newCar.buildCar === '' ? null : moment(+newCar.buildCar)}\r\n              onChange={e =>\r\n                setNewCar({\r\n                  ...newCar,\r\n                  buildCar: e !== null ? parseTime(e) : '',\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"create-item__time\">\r\n            <span className=\"create-item__title\">Тех Осмотр</span>\r\n            <DatePicker\r\n              format=\"DD-MM-YYYY\"\r\n              value={newCar.carCheck === '' ? null : moment(+newCar.carCheck)}\r\n              onChange={e => {\r\n                setNewCar({\r\n                  ...newCar,\r\n                  carCheck: e !== null ? parseTime(e) : '',\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <Input\r\n            type={newCar.model}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                model: e.target.value,\r\n              })\r\n            }\r\n            title=\"Модель\"\r\n          />\r\n          <Input\r\n            type={newCar.mark}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                mark: e.target.value,\r\n              })\r\n            }\r\n            title=\"Марка\"\r\n          />\r\n          <Input\r\n            type={newCar.mileage}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                mileage: e.target.value,\r\n              })\r\n            }\r\n            title=\"Пробег\"\r\n          />\r\n          <Input\r\n            type={newCar.price}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                price: e.target.value,\r\n              })\r\n            }\r\n            title=\"Цена покупки\"\r\n          />\r\n          <Input\r\n            type={newCar.costs}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                costs: e.target.value,\r\n              })\r\n            }\r\n            title=\"Расходы\"\r\n          />\r\n          <Input\r\n            type={newCar.forSale}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                forSale: e.target.value,\r\n              })\r\n            }\r\n            title=\"На продажу\"\r\n          />\r\n          <div className=\"create-item__time\">\r\n            <span className=\"create-item__title\">Дата покупки</span>\r\n            <DatePicker\r\n              format=\"DD-MM-YYYY\"\r\n              value={newCar.buyDay === '' ? null : moment(+newCar.buyDay)}\r\n              onChange={e => {\r\n                setNewCar({\r\n                  ...newCar,\r\n                  buyDay: e !== null ? parseTime(e) : '',\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"create-item__time\">\r\n            <span className=\"create-item__title\">Дата продажи</span>\r\n            <DatePicker\r\n              format=\"DD-MM-YYYY\"\r\n              value={newCar.cellDay === '' ? null : moment(+newCar.cellDay)}\r\n              onChange={e => {\r\n                setNewCar({\r\n                  ...newCar,\r\n                  cellDay: e !== null ? parseTime(e) : '',\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <Input\r\n            type={newCar.owner}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                owner: e.target.value,\r\n              })\r\n            }\r\n            title=\"Владелец\"\r\n          />\r\n          <div className=\"create-item__radio\">\r\n            <Radio.Group\r\n              onChange={e => {\r\n                setNewCar({\r\n                  ...newCar,\r\n                  isCell: e.target.value,\r\n                })\r\n              }}\r\n              value={newCar.isCell}\r\n            >\r\n              <Radio value={'cell'}>Продано</Radio>\r\n              <Radio value={'has'}>В наличии </Radio>\r\n            </Radio.Group>\r\n          </div>\r\n          <Input\r\n            type={newCar.profit}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                profit: e.target.value,\r\n              })\r\n            }\r\n            title=\"Прибыль\"\r\n          />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default EditModalCar\r\n","import * as React from 'react'\r\nimport { DatePicker, Modal, Radio } from 'antd/lib'\r\nimport { useState } from 'react'\r\nimport { Service } from './service'\r\nimport { parseTime } from './helpers'\r\nimport { Input } from './kit/input'\r\n\r\ninterface Props {\r\n  isOpened: boolean\r\n  close: (isOpen: boolean) => void\r\n  service: Service\r\n}\r\n\r\nconst CreateModalCar = ({ isOpened, close, service }: Props) => {\r\n  const [newCar, setNewCar] = useState({\r\n    key: `${service.dataCar.length + 1}`,\r\n    carNumber: '',\r\n    buildCar: '',\r\n    carCheck: '',\r\n    model: '',\r\n    mark: '',\r\n    mileage: '',\r\n    price: '',\r\n    costs: '',\r\n    forSale: '',\r\n    buyDay: '',\r\n    cellDay: '',\r\n    owner: '',\r\n    isCell: 'has',\r\n    profit: '',\r\n  })\r\n\r\n  return (\r\n    <>\r\n      <Modal\r\n        title=\"Добавить\"\r\n        visible={isOpened}\r\n        onOk={() => {\r\n          service.addData2(newCar)\r\n          close(false)\r\n        }}\r\n        onCancel={() => close(false)}\r\n      >\r\n        <div>\r\n          <Input\r\n            type={newCar.carNumber}\r\n            dispatch={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              setNewCar({\r\n                ...newCar,\r\n                carNumber: e.target.value,\r\n              })\r\n            }}\r\n            title=\"Номер машины\"\r\n          />\r\n          <div className=\"create-item__time\">\r\n            <span className=\"create-item__title\">Год выпуска</span>\r\n            <DatePicker\r\n              format=\"DD-MM-YYYY\"\r\n              onChange={e =>\r\n                setNewCar({\r\n                  ...newCar,\r\n                  buildCar: e !== null ? parseTime(e) : '',\r\n                })\r\n              }\r\n            />\r\n          </div>\r\n          <div className=\"create-item__time\">\r\n            <span className=\"create-item__title\">Тех Осмотр</span>\r\n            <DatePicker\r\n              format=\"DD-MM-YYYY\"\r\n              onChange={e => {\r\n                setNewCar({\r\n                  ...newCar,\r\n                  carCheck: e !== null ? parseTime(e) : '',\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <Input\r\n            type={newCar.model}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                model: e.target.value,\r\n              })\r\n            }\r\n            title=\"Модель\"\r\n          />\r\n          <Input\r\n            type={newCar.mark}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                mark: e.target.value,\r\n              })\r\n            }\r\n            title=\"Марка\"\r\n          />\r\n          <Input\r\n            type={newCar.mileage}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                mileage: e.target.value,\r\n              })\r\n            }\r\n            title=\"Пробег\"\r\n          />\r\n          <Input\r\n            type={newCar.price}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                price: e.target.value,\r\n              })\r\n            }\r\n            title=\"Цена покупки\"\r\n          />\r\n          <Input\r\n            type={newCar.costs}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                costs: e.target.value,\r\n              })\r\n            }\r\n            title=\"Расходы\"\r\n          />\r\n          <Input\r\n            type={newCar.forSale}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                forSale: e.target.value,\r\n              })\r\n            }\r\n            title=\"На продажу\"\r\n          />\r\n          <div className=\"create-item__time\">\r\n            <span className=\"create-item__title\">Дата покупки</span>\r\n            <DatePicker\r\n              format=\"DD-MM-YYYY\"\r\n              onChange={e => {\r\n                setNewCar({\r\n                  ...newCar,\r\n                  buyDay: e !== null ? parseTime(e) : '',\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <div className=\"create-item__time\">\r\n            <span className=\"create-item__title\">Дата продажи</span>\r\n            <DatePicker\r\n              format=\"DD-MM-YYYY\"\r\n              onChange={e => {\r\n                setNewCar({\r\n                  ...newCar,\r\n                  cellDay: e !== null ? parseTime(e) : '',\r\n                })\r\n              }}\r\n            />\r\n          </div>\r\n          <Input\r\n            type={newCar.owner}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                owner: e.target.value,\r\n              })\r\n            }\r\n            title=\"Владелец\"\r\n          />\r\n          <div className=\"create-item__radio\">\r\n            <Radio.Group\r\n              onChange={e => {\r\n                setNewCar({\r\n                  ...newCar,\r\n                  isCell: e.target.value,\r\n                })\r\n              }}\r\n              value={newCar.isCell}\r\n            >\r\n              <Radio value={'cell'}>Продано</Radio>\r\n              <Radio value={'has'}>В наличии </Radio>\r\n            </Radio.Group>\r\n          </div>\r\n          <Input\r\n            type={newCar.profit}\r\n            dispatch={(e: any) =>\r\n              setNewCar({\r\n                ...newCar,\r\n                profit: e.target.value,\r\n              })\r\n            }\r\n            title=\"Прибыль\"\r\n          />\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CreateModalCar\r\n","import * as React from 'react'\r\nimport { Modal } from 'antd/lib'\r\nimport { Data } from './service'\r\n\r\ninterface Props {\r\n  isOpened: boolean\r\n  close: (isOpen: boolean) => void\r\n  data: Data\r\n}\r\n\r\nconst Report = ({ isOpened, close, data }: Props) => {\r\n  const style = {\r\n    height: 800,\r\n    fontSize: 24,\r\n    fontWeight: 700,\r\n  }\r\n  return (\r\n    <Modal\r\n      bodyStyle={style}\r\n      title=\"Отчет\"\r\n      visible={isOpened}\r\n      onOk={() => {\r\n        close(false)\r\n      }}\r\n      onCancel={() => close(false)}\r\n    >\r\n      <p>Куплено авто: {data.filter(item => item.isCell === 'has').length}</p>\r\n      <p>\r\n        Закупка: :\r\n        {data.reduce((acc, item) => {\r\n          if (item.price !== '') {\r\n            acc = acc + parseFloat(item.price)\r\n          }\r\n          return acc\r\n        }, 0)}\r\n      </p>\r\n      <p>\r\n        Расходы: :\r\n        {data.reduce((acc, item) => {\r\n          if (item.costs !== '') {\r\n            acc = acc + parseFloat(item.costs)\r\n          }\r\n          return acc\r\n        }, 0)}\r\n      </p>\r\n      <p>\r\n        Продано :\r\n        {data.reduce((acc, item) => {\r\n          if (item.forSale !== '') {\r\n            acc = acc + parseFloat(item.forSale)\r\n          }\r\n          return acc\r\n        }, 0)}\r\n      </p>\r\n      <p>\r\n        Прибыль :\r\n        {data.reduce((acc, item) => {\r\n          if (item.profit !== '') {\r\n            acc = acc + parseFloat(item.profit)\r\n          }\r\n          return acc\r\n        }, 0)}\r\n      </p>\r\n    </Modal>\r\n  )\r\n}\r\n\r\nexport default Report\r\n","import { Button, DatePicker, Radio } from 'antd'\r\nimport * as React from 'react'\r\nimport { useState } from 'react'\r\nimport moment from 'moment'\r\nimport { Data, Service } from './service'\r\nimport Report from './Report'\r\nimport { parseTime } from './helpers'\r\n\r\ninterface Props {\r\n  service: Service\r\n  setDataCar: (data: Data) => void\r\n  dataCar: Data\r\n}\r\nconst Filters = ({ service, setDataCar, dataCar }: Props) => {\r\n  const [filters, setFilters] = useState({\r\n    model: '',\r\n    mark: '',\r\n    time: {\r\n      start: '',\r\n      end: '',\r\n    },\r\n    isCell: 'all',\r\n  })\r\n\r\n  const [isOpenReportModal, setOpenReportModal] = useState(false)\r\n\r\n  return (\r\n    <div className=\"filters\">\r\n      <div className=\"filters-item\">\r\n        <DatePicker\r\n          format=\"DD-MM-YYYY\"\r\n          placeholder=\"Начало\"\r\n          value={filters.time.start === '' ? null : moment(+filters.time.start)}\r\n          onChange={e => {\r\n            setFilters({\r\n              ...filters,\r\n              time: {\r\n                ...filters.time,\r\n                start: e !== null ? parseTime(e) : '',\r\n              },\r\n            })\r\n          }}\r\n        />\r\n        <DatePicker\r\n          placeholder=\"Конец\"\r\n          format=\"DD-MM-YYYY\"\r\n          value={filters.time.end === '' ? null : moment(+filters.time.end)}\r\n          onChange={e =>\r\n            setFilters({\r\n              ...filters,\r\n              time: {\r\n                ...filters.time,\r\n                end: e !== null ? `${+parseTime(e) + 10000}` : '',\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </div>\r\n\r\n      <div className=\"filters-item\">\r\n        <input\r\n          placeholder=\"Модель\"\r\n          value={filters.model}\r\n          onChange={e =>\r\n            setFilters({\r\n              ...filters,\r\n              model: e.target.value,\r\n            })\r\n          }\r\n        />\r\n      </div>\r\n\r\n      <div className=\"filters-item\">\r\n        <input\r\n          value={filters.mark}\r\n          placeholder=\"Марка\"\r\n          onChange={e => {\r\n            return setFilters({\r\n              ...filters,\r\n              mark: e.target.value,\r\n            })\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div>\r\n        <Radio.Group\r\n          onChange={e => {\r\n            setFilters({\r\n              ...filters,\r\n              isCell: e.target.value,\r\n            })\r\n          }}\r\n          value={filters.isCell}\r\n        >\r\n          <Radio value=\"all\">Все</Radio>\r\n          <Radio value=\"cell\">Продано</Radio>\r\n          <Radio value=\"has\">В наличии </Radio>\r\n        </Radio.Group>\r\n      </div>\r\n\r\n      <Button\r\n        type=\"primary\"\r\n        onClick={() => {\r\n          service.reset(setDataCar)\r\n          setFilters({\r\n            model: '',\r\n            mark: '',\r\n            time: {\r\n              start: '',\r\n              end: '',\r\n            },\r\n            isCell: 'all',\r\n          })\r\n        }}\r\n      >\r\n        Сбросить\r\n      </Button>\r\n\r\n      <Button type=\"primary\" onClick={() => service.filter(filters, setDataCar)}>\r\n        Применить\r\n      </Button>\r\n\r\n      <span>\r\n        <Button type=\"primary\" onClick={() => setOpenReportModal(true)}>\r\n          Отчет\r\n        </Button>\r\n        {isOpenReportModal && (\r\n          <Report isOpened={isOpenReportModal} close={setOpenReportModal} data={dataCar} />\r\n        )}\r\n      </span>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Filters\r\n","import * as React from 'react'\r\nimport { Table, Button } from 'antd/lib'\r\nimport 'antd/dist/antd.css'\r\nimport { useEffect, useState } from 'react'\r\nimport { Service } from './service'\r\nimport EditModalCar from './EditModalCar'\r\nimport CreateModalCar from './CreateModalCar'\r\nimport Filters from './Filters'\r\n\r\ninterface Props {\r\n  service: Service\r\n}\r\n\r\nconst TableCar = ({ service }: Props) => {\r\n  const columns = [\r\n    {\r\n      title: '№',\r\n      dataIndex: 'key',\r\n      key: 'key',\r\n    },\r\n    {\r\n      title: 'Номер',\r\n      dataIndex: 'carNumber',\r\n      key: 'carNumber',\r\n    },\r\n    {\r\n      title: 'Год выпуска',\r\n      key: 'buildCar',\r\n      render: (value: any) => (value.buildCar ? new Date(+value.buildCar).toLocaleDateString() : ''),\r\n    },\r\n    {\r\n      title: 'Тех Осмотр',\r\n      key: 'carCheck',\r\n      render: (value: any) => (value.carCheck ? new Date(+value.carCheck).toLocaleDateString() : ''),\r\n    },\r\n    {\r\n      title: 'Модель',\r\n      dataIndex: 'model',\r\n      key: 'model',\r\n    },\r\n    {\r\n      title: 'Марка',\r\n      dataIndex: 'mark',\r\n      key: 'mark',\r\n    },\r\n\r\n    {\r\n      title: 'Пробег',\r\n      dataIndex: 'mileage',\r\n      key: 'mileage',\r\n    },\r\n    {\r\n      title: 'Цена покупки',\r\n      dataIndex: 'price',\r\n      key: 'price',\r\n    },\r\n    {\r\n      title: 'Расходы',\r\n      dataIndex: 'costs',\r\n      key: 'costs',\r\n    },\r\n    {\r\n      title: 'На продажу',\r\n      dataIndex: 'forSale',\r\n      key: 'forSale',\r\n    },\r\n    {\r\n      title: 'Дата покупки',\r\n      key: 'buyDay',\r\n      render: (value: any) => {\r\n        return value.buyDay ? new Date(+value.buyDay).toLocaleDateString() : ''\r\n      },\r\n    },\r\n    {\r\n      title: 'Дата продажи',\r\n      key: 'cellDay',\r\n      render: (value: any) => (value.cellDay ? new Date(+value.cellDay).toLocaleDateString() : ''),\r\n    },\r\n    {\r\n      title: 'Владелец',\r\n      dataIndex: 'owner',\r\n      key: 'owner',\r\n    },\r\n    {\r\n      title: 'Продана',\r\n      key: 'isCell',\r\n      render: (value: any) => (value.isCell === 'has' ? 'В наличии' : 'Продано'),\r\n    },\r\n    {\r\n      title: 'Прибыль',\r\n      dataIndex: 'profit',\r\n      key: 'profit',\r\n    },\r\n    {\r\n      key: 'action',\r\n      render: (value: any) => {\r\n        return (\r\n          <span>\r\n            <img\r\n              src=\"https://img.icons8.com/material-outlined/24/000000/gears.png\"\r\n              onClick={() => setOpenedEditModal(value.key)}\r\n            />\r\n            <EditModalCar\r\n              isOpened={isOpenedEditModal === value.key}\r\n              row={value}\r\n              close={setOpenedEditModal}\r\n              service={service}\r\n            />\r\n          </span>\r\n        )\r\n      },\r\n    },\r\n  ]\r\n\r\n  const [isOpenedEditModal, setOpenedEditModal] = useState('')\r\n  const [isOpenedModal, setOpenedModal] = useState(false)\r\n  const [isOpenedFilters, setOpenedFilters] = useState(false)\r\n  const [dataCar, setDataCar] = useState(service.dataCar)\r\n  const [onlyHasCar, setOnlyHasCar] = useState(true)\r\n\r\n  useEffect(() => {\r\n    service.fetchData2(setDataCar)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (\r\n      dataCar.length > 0 &&\r\n      onlyHasCar &&\r\n      dataCar.length !== service.dataCar.filter(item => item.isCell === 'has').length\r\n    ) {\r\n      setDataCar(service.dataCar.filter(item => item.isCell === 'has'))\r\n    } else if (dataCar.length > 0 && !onlyHasCar && dataCar.length !== service.dataCar.length) {\r\n      setDataCar(service.dataCar)\r\n    }\r\n  }, [onlyHasCar, dataCar])\r\n\r\n  return (\r\n    <>\r\n      {isOpenedFilters && <Filters service={service} setDataCar={setDataCar} dataCar={dataCar} />}\r\n\r\n      <div className=\"options\">\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => setOnlyHasCar(false)}>\r\n            Все\r\n          </Button>\r\n        </span>\r\n\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => setOnlyHasCar(true)}>\r\n            В наличии\r\n          </Button>\r\n        </span>\r\n\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => setOpenedModal(true)}>\r\n            Добавить\r\n          </Button>\r\n          {isOpenedModal && (\r\n            <CreateModalCar isOpened={isOpenedModal} close={setOpenedModal} service={service} />\r\n          )}\r\n        </span>\r\n\r\n        <span>\r\n          <Button type=\"primary\" onClick={() => setOpenedFilters(!isOpenedFilters)}>\r\n            Фильтр\r\n          </Button>\r\n        </span>\r\n      </div>\r\n\r\n      <Table columns={columns} dataSource={dataCar} pagination={false} bordered={true} />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TableCar\r\n","import * as firebase from 'firebase/app'\r\nimport 'firebase/firestore'\r\n\r\nexport interface Filter {\r\n  model: string\r\n  mark: string\r\n  time: {\r\n    start: string\r\n    end: string\r\n  }\r\n  isCell: string\r\n}\r\n\r\nexport interface FirebaseData {\r\n  [key: string]: {\r\n    car: Car\r\n  }\r\n}\r\n\r\nexport interface Car {\r\n  key: string\r\n  carNumber: string\r\n  buildCar: string\r\n  carCheck: string\r\n  model: string\r\n  mark: string\r\n  mileage: string\r\n  price: string\r\n  costs: string\r\n  forSale: string\r\n  buyDay: string\r\n  cellDay: string\r\n  owner: string\r\n  isCell: string\r\n  profit: string\r\n}\r\n\r\nexport type Data = Car[]\r\n\r\nexport class Service {\r\n  firebaseConfig = {\r\n    apiKey: 'AIzaSyAS3Tmzpw_YfZnpGdisPnfXZjN8BScjhL0',\r\n    authDomain: 'lehtierittely-bc08d.firebaseapp.com',\r\n    databaseURL: 'https://lehtierittely-bc08d.firebaseio.com',\r\n    projectId: 'lehtierittely-bc08d',\r\n    storageBucket: 'lehtierittely-bc08d.appspot.com',\r\n    messagingSenderId: '455064458920',\r\n    appId: '1:455064458920:web:b70dc58166e8de8996d49d',\r\n  }\r\n\r\n  db: any\r\n\r\n  dataCar: Data = []\r\n  allData: Data = []\r\n  filterData: Data = []\r\n\r\n  constructor() {\r\n    firebase.initializeApp(this.firebaseConfig)\r\n    this.db = firebase.firestore()\r\n  }\r\n\r\n  fetchData2(dispatch: (data: Data) => void) {\r\n    this.db\r\n      .collection('car')\r\n      .doc('NB9Di5WqKJ4Ti29UATtd')\r\n      .onSnapshot(\r\n        (doc: any) => {\r\n          const data = doc.data() as FirebaseData\r\n          this.dataCar = Object.values(data)\r\n            .map(item => item.car)\r\n            .reverse()\r\n\r\n          this.filterData = Object.values(data)\r\n            .map(item => item.car)\r\n            .reverse()\r\n          this.allData = Object.values(data)\r\n            .map(item => item.car)\r\n            .reverse()\r\n          dispatch(this.dataCar)\r\n        },\r\n        () => {}\r\n      )\r\n  }\r\n\r\n  addData2(car: Car) {\r\n    this.db\r\n      .collection('car')\r\n      .doc('NB9Di5WqKJ4Ti29UATtd')\r\n      .set(\r\n        {\r\n          [car.key]: {\r\n            car,\r\n          },\r\n        },\r\n        { merge: true }\r\n      )\r\n      .then(() => {\r\n        console.log('Document written with ID: ')\r\n      })\r\n      .catch(function() {\r\n        console.error('Error adding document: ')\r\n      })\r\n  }\r\n\r\n  editData2(car: Car) {\r\n    this.db\r\n      .collection('car')\r\n      .doc('NB9Di5WqKJ4Ti29UATtd')\r\n      .update({\r\n        [car.key]: {\r\n          car,\r\n        },\r\n      })\r\n      .then(() => {\r\n        console.log('Document written with ID: ')\r\n      })\r\n      .catch(function() {\r\n        console.error('Error adding document: ')\r\n      })\r\n  }\r\n  filterCell(type: string, setDataCar: (data: Data) => void) {\r\n    const cell = this.dataCar.filter(item => {\r\n      if (type === 'has') {\r\n        return item.isCell === 'has'\r\n      } else if (type === 'cell') {\r\n        return item.isCell === 'cell'\r\n      } else {\r\n        return item\r\n      }\r\n    })\r\n\r\n    setDataCar(cell)\r\n  }\r\n\r\n  filter(filterType: Filter, setDataCar: (data: Data) => void) {\r\n    const hasCar =\r\n      filterType.isCell !== ''\r\n        ? this.filterData.filter(item => {\r\n            if (filterType.isCell === 'has') {\r\n              return item.isCell === 'has'\r\n            } else if (filterType.isCell === 'cell') {\r\n              return item.isCell === 'cell'\r\n            } else {\r\n              return item\r\n            }\r\n          })\r\n        : this.allData\r\n\r\n    const model = filterType.model !== '' ? hasCar.filter(item => item.model === filterType.model) : hasCar\r\n\r\n    const mark = filterType.mark !== '' ? model.filter(item => item.mark === filterType.mark) : model\r\n\r\n    const startTime =\r\n      filterType.time.start !== ''\r\n        ? mark.filter(item => item.buyDay !== '' && +item.buyDay >= +filterType.time.start)\r\n        : mark\r\n\r\n    const finishTime =\r\n      filterType.time.end !== ''\r\n        ? startTime.filter(item => item.buyDay !== '' && +item.buyDay <= +filterType.time.end)\r\n        : startTime\r\n\r\n    this.dataCar = finishTime\r\n    setDataCar(this.dataCar)\r\n  }\r\n\r\n  reset(setDataCar: (data: Data) => void) {\r\n    this.filterData = this.allData\r\n    setDataCar(this.allData)\r\n  }\r\n\r\n  report() {\r\n    return this.filterData\r\n  }\r\n\r\n  getAllData(setDataCar: (data: Data) => void) {\r\n    this.filterData = this.allData\r\n    setDataCar(this.allData)\r\n  }\r\n}\r\n","import React from 'react'\nimport './App.css'\nimport TableCar from './table'\nimport { Service } from './service'\n\nconst App = () => {\n  const service = new Service()\n\n  return (\n    <div className=\"App\">\n      <TableCar service={service} />\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}